import numpy as np
import matplotlib.pyplot as plt

# Function to integrate
def f(x):
    return x**2

# Trapezoidal Rule function
def trapezoidal_rule(a, b, n):
    h = (b - a) / n  # Width of each subinterval
    x = np.linspace(a, b, n+1)  # n+1 points between a and b
    y = f(x)

    result = (h/2) * (y[0] + 2*sum(y[1:n]) + y[n])
    return result, x, y

# Input from user
a = float(input("Enter lower limit a: "))
b = float(input("Enter upper limit b: "))
n = int(input("Enter number of subintervals n: "))

# Calculate integration and get values
result, x_vals, y_vals = trapezoidal_rule(a, b, n)

print(f"\nApproximate value of integral using Trapezoidal Rule is: {result}")

# Optional: Plotting the function with trapezoids
plt.plot(x_vals, y_vals, 'bo-', label='f(x) = xÂ²')
for i in range(n):
    plt.fill_between([x_vals[i], x_vals[i+1]], [y_vals[i], y_vals[i+1]], alpha=0.3)
plt.title("Trapezoidal Rule Approximation")
plt.xlabel("x")
plt.ylabel("f(x)")
plt.legend()
plt.grid()
plt.show()
